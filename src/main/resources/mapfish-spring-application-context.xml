<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2014  Camptocamp
  ~
  ~ This file is part of MapFish Print
  ~
  ~ MapFish Print is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ MapFish Print is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with MapFish Print.  If not, see <http://www.gnu.org/licenses/>.
  -->

<beans default-lazy-init="true" xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
    <context:annotation-config/>
    <context:property-placeholder system-properties-mode="FALLBACK" file-encoding="UTF-8" location="mapfish-spring.properties"/>


    <bean id="main" class="org.mapfish.print.cli.Main"/>
    <bean id="workingDirectories" class="org.mapfish.print.config.WorkingDirectories">
        <property name="working" value="${workingDir}" />
    </bean>

    <bean id="configurationFactory" class="org.mapfish.print.config.ConfigurationFactory"/>
    <bean id="processorDependencyGraphFactory" class="org.mapfish.print.processor.ProcessorDependencyGraphFactory" />

    <bean id="registry" class="org.mapfish.print.servlet.registry.BasicRegistry"/>
    <bean id="mapPrinterFactory" class="org.mapfish.print.servlet.ServletMapPrinterFactory"/>
    <bean id="jobManager" class="org.mapfish.print.servlet.job.ThreadPoolJobManager"/>
    <bean id="printJobFactory" class="org.mapfish.print.servlet.job.FilePrintJob"/>
    <bean id="fileReportLoader" class="org.mapfish.print.servlet.job.loader.FileReportLoader"/>

    <bean id="metricRegistry" class="com.codahale.metrics.MetricRegistry"/>
    <bean id="healthCheckRegistry" class="com.codahale.metrics.health.HealthCheckRegistry"/>
    <bean id="httpClientFactory" class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
        <property name="httpClient" ref="httpClient" />
    </bean>
    <bean id="httpClient" class="com.codahale.metrics.httpclient.InstrumentedHttpClient">
        <constructor-arg index="0" ref="metricRegistry"/>
        <constructor-arg index="1" ref="metricNameStrategy" />
    </bean>
    <bean id="metricNameStrategy" class="org.mapfish.print.metrics.MetricsNameStrategyFactory" factory-method="hostAndMethod" />
    <bean id="loggingMetricsConfigurator" class="org.mapfish.print.metrics.LoggingMetricsConfigurator" />

    <bean id="forkJoinPool" class="jsr166y.ForkJoinPool" destroy-method="shutdownNow">
        <!--
            Number of threads to user in pool we want a large number because http requests will block make the thread hang until
            the request completes.  Because of this we want many threads available to the processors.
        -->
        <constructor-arg index="0" value="100" />
    </bean>

    <bean id="pdfOutputFormat" class="org.mapfish.print.output.JasperReportOutputFormat" scope="prototype" />
    <bean id="mapPrinter" class="org.mapfish.print.MapPrinter" scope="prototype"/>
    <bean id="configuration" class="org.mapfish.print.config.Configuration" scope="prototype"/>

    <bean id="!localMatch" class="org.mapfish.print.config.AcceptAllMatcher" scope="prototype" />
    <bean id="!ipMatch" class="org.mapfish.print.config.AddressHostMatcher" scope="prototype" />
    <bean id="!dnsMatch" class="org.mapfish.print.config.DnsHostMatcher" scope="prototype" />
    <bean id="!acceptAll" class="org.mapfish.print.config.AcceptAllMatcher" scope="prototype" />

    <bean id="!template" class="org.mapfish.print.config.Template" scope="prototype" />

    <bean id="!integer" class="org.mapfish.print.attribute.IntegerAttribute" scope="prototype" />
    <bean id="!float" class="org.mapfish.print.attribute.FloatAttribute" scope="prototype" />
    <bean id="!string" class="org.mapfish.print.attribute.StringAttribute" scope="prototype" />
    <bean id="!map" class="org.mapfish.print.attribute.MapAttribute" scope="prototype" />
    <bean id="!legend" class="org.mapfish.print.attribute.LegendAttribute" scope="prototype" />
    <bean id="!table" class="org.mapfish.print.attribute.TableAttribute" scope="prototype" />
    <bean id="!tableList" class="org.mapfish.print.attribute.TableListAttribute" scope="prototype" />

    <bean id="!createMap" class="org.mapfish.print.processor.map.MapProcessor" scope="prototype" />
    <bean id="!prepareLegend" class="org.mapfish.print.processor.jasper.LegendProcessor" scope="prototype" />
    <bean id="!prepareTable" class="org.mapfish.print.processor.jasper.TableProcessor" scope="prototype" />
    <bean id="!prepareTableList" class="org.mapfish.print.processor.jasper.TableListProcessor" scope="prototype" />
    <bean id="!reportBuilder" class="org.mapfish.print.processor.jasper.JasperReportBuilder" scope="prototype" />
</beans>
